name: Build with Boost and Pybind11

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!pyproject.toml'
      - '!.github/workflows/**'
      - '.github/workflows/build.yml'
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!pyproject.toml'
      - '!.github/workflows/**'
      - '.github/workflows/build.yml'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create build directories
        run: mkdir _install _build
        shell: bash

      - name: Install Python Dependencies
        run: python -m pip install --upgrade pip "numpy<2" conan
        shell: bash

      - name: Detect Conan Profile
        run: conan profile detect
        shell: bash

      - name: Install Dependencies with Conan
        run: |
          conan install . --output-folder=build --build=missing
        shell: bash

      - name: Set Boost_ROOT
        run: |
          set -x
          ls -d ~/.conan2/p/boost*
          ls build
          conan search boost
        shell: bash

      - name: Find SITE_PACKAGES
        run: |
          echo "SITE_PACKAGES=$(python -c 'import site; print(site.getsitepackages()[0])')" >> $GITHUB_ENV
        shell: bash

      - name: Construct CMake command
        run: |
          # Construct the cmake command as a variable, so the
          # Configure step below can execute it, but also so we can store
          # in in the install_manifest as a debugging reference
          CMAKE_COMMAND="cmake -B . -S .. \
                -DCMAKE_PREFIX_PATH=build \
                -DBoost_ROOT=build \
                -DCMAKE_INSTALL_PREFIX=../_install \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_CXX_STANDARD=17 \
                -DBUILD_TESTING=OFF \
                -DPYTHON=ON \
                -DPYBIND11=ON \
                -DCMAKE_VERBOSE_MAKEFILE=ON \
                -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake"
          echo "CMAKE_COMMAND=$CMAKE_COMMAND" >> $GITHUB_ENV
        working-directory: _build
        shell: bash

      - name: Configure
        run: |
          $CMAKE_COMMAND
        working-directory: _build
        shell: bash

      - name: Build
        run: |
          cmake --build . --target install --config Release
        working-directory: _build
        shell: bash

      - name: Test Pybind11
        run: |
          set -x
          python src/pybind11/PyBindImathTest/test_import.py
        shell: bash

      - name: Test Python
        run: |
          set -x
          python src/python/PyImathTest/test_import.py
        shell: bash

