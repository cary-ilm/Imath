name: Build with MinGW32

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!connanfile.txt'
      - '!.github/workflows/**'
      - '.github/workflows/ci_mingw.yml'
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!connanfile.txt'
      - '!.github/workflows/**'
      - '.github/workflows/ci_mingw.yml'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install MSYS2 
        uses: msys2/setup-msys2@61f9e5e925871ba6c9e3e8da24ede83ea27fa91f # v2.27.0
        with:
          msystem: MINGW32
          update: true
          install: git
          pacboy: cc:p cmake:p 

      - name: Set up Python for MINGW32
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x86'
      
      - name: Create build directories
        run: mkdir _install _build _examples _python
        shell: bash

      - name: Set Up Conan
        run: |
          CONAN_ROOT="${{ github.workspace }}/_conan"
          conan_args=("install")
          conan_args+=("--output-folder=${CONAN_ROOT}")
          conan_args+=("--build=missing")
          conan_args+=("--generator" "CMakeDeps")
          conan_args+=("--generator" "CMakeToolchain")
          conan_args+=("--settings" "build_type=Release")
          conan_args+=("--requires=pybind11/2.11.1")
          conan_args+=("--settings" "compiler=gcc")
          conan_args+=("--settings" "compiler.version=14")
          conan_args+=("--settings" "compiler.libcxx=libstdc++11")
          conan_args+=("--settings" "arch=x86")
          python -m pip install --upgrade pip "numpy<2" conan
          conan profile detect
          echo conan "${conan_args[@]}"
          conan "${conan_args[@]}"
          echo "CONAN_ROOT=${CONAN_ROOT}" >> $GITHUB_ENV
          echo "CMAKE_TOOLCHAIN_FILE=${CONAN_ROOT}/conan_toolchain.cmake" >> $GITHUB_ENV
        shell: bash

      - name: Install Python Dependencies
        run: |
          pip install pybind11
          pybind11_DIR=$(python -c 'import pybind11; print(pybind11.get_cmake_dir())')
          echo "pybind11_DIR=$pybind11_DIR" >> $GITHUB_ENV
          echo "PYTHON_INSTALL_DIR=${{ github.workspace }}/_install/python" >> $GITHUB_ENV
          echo "PYTHONPATH=${{ github.workspace }}/_install/python" >> $GITHUB_ENV
          PYTHON_EXECUTABLE=$(which python)
          echo "PYTHON_EXECUTABLE=${PYTHON_EXECUTABLE}" >> $GITHUB_ENV
        shell: bash

      - name: Construct CMake command
        run: |
          cmake_args=("-B" "." "-S" "..")
          cmake_args+=("-DCMAKE_INSTALL_PREFIX=../_install")
          cmake_args+=("-DCMAKE_BUILD_TYPE=Release")
          cmake_args+=("-DCMAKE_CXX_STANDARD=17")
          cmake_args+=("-DBUILD_SHARED_LIBS=ON")
          cmake_args+=("-DPYBIND11=ON")
          cmake_args+=("-DCMAKE_VERBOSE_MAKEFILE=ON")
          cmake_args+=("-DPython3_EXECUTABLE=${{ env.PYTHON_EXECUTABLE }}")
          cmake_args+=("-DPYTHON_INSTALL_DIR=${{ env.PYTHON_INSTALL_DIR }}")
          cmake_args+=("-Dpybind11_DIR=${{ env.pybind11_DIR }}")
          cmake_args+=("-DCMAKE_TOOLCHAIN_FILE=${{ env.CMAKE_TOOLCHAIN_FILE }}")
          cmake_args+=("-DCMAKE_POLICY_DEFAULT_CMP0091=NEW")

          quoted_args=$(printf '%q ' "${cmake_args[@]}")
          echo "CMAKE_ARGS=$quoted_args" >> $GITHUB_ENV
        working-directory: _build
        shell: bash

      - name: Configure & Build (msys2) # requires msys2 shell
        run: |
          cmake --version
          cmake ${{ env.CMAKE_ARGS }}
          cmake --build . --target install --config Release
        working-directory: _build
        shell: msys2 {0}

      - name: objdump
        run: |
          objdump -x "/d/a/Imath/Imath/_install/python/pybindimath.cp39-win32.pyd" | grep "DLL Name"
        shell: msys2 {0}
        
      - name: Test Pybind11
        run: |
          "${{ env.PYTHON_EXECUTABLE }}" src/pybind11/PyBindImathTest/test_import_pybindimath.py
        shell: msys2 {0}
        env:
          PATH: "${{ github.workspace }}/_install/lib;${{ github.workspace }}/_install/bin;${{ env.PATH }}"
          PYTHONPATH: "${{ github.workspace }}/_install/python"
          
      - name: Test
        run: |
          cmake --build . --target test --config Release
        shell: msys2 {0}
        working-directory: _build
        env:
          PATH: "${{ github.workspace }}/_install/lib;${{ github.workspace }}/_install/bin;${{ env.PATH }}"
          PYTHONPATH: "${{ github.workspace }}/_install/python"
          