name: Build with MinGW32

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!connanfile.txt'
      - '!.github/workflows/**'
      - '.github/workflows/ci_mingw.yml'
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!connanfile.txt'
      - '!.github/workflows/**'
      - '.github/workflows/ci_mingw.yml'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install MSYS2 
        uses: msys2/setup-msys2@61f9e5e925871ba6c9e3e8da24ede83ea27fa91f # v2.27.0
        with:
          msystem: MINGW32
          update: true
          install: git
          pacboy: cc:p cmake:p 

      - name: Set up Python for MINGW32
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x86'
      
      - name: Create build directories
        run: mkdir _install _build _examples _python

      - name: Add Python to PATH
        run: |
          set -x

          export PYTHON_DIR=$(cygpath -u "$pythonLocation")
          echo "PYTHON_DIR=$PYTHON_DIR" >> "$GITHUB_ENV"

          export PYTHON_EXECUTABLE="$PYTHON_DIR/python.exe"
          echo "PYTHON_EXECUTABLE=$PYTHON_EXECUTABLE" >> $GITHUB_ENV

          echo "PYTHON_INSTALL_DIR=$(cygwin -u $GITHUB_WORKSPACE)/_install/python" >> $GITHUB_ENV

      - name: Set Up Conan
        run: |
          set -x

          $PYTHON_EXECUTABLE -m pip install --upgrade --user pip "numpy<2" conan pybind11

          CONAN_ROOT="$(cygpath -u $GITHUB_WORKSPACE)/_conan"
          echo "CONAN_ROOT=$CONAN_ROOT" >> $GITHUB_ENV
 
          export BIN_DIR=$($PYTHON_EXECUTABLE -c "import site, os; print(os.path.join(os.path.dirname(site.USER_SITE), 'Scripts'))")
          export CONAN_BIN="$BIN_DIR/conan.exe"
          
          export PATH="$BIN_DIR:$PATH"
          
          
          $CONAN_BIN profile detect
          $CONAN_BIN install \
            --output-folder=$CONAN_ROOT \
            --build=missing \
            --generator CMakeDeps \
            --generator CMakeToolchain \
            --settings build_type=Release \
            --requires=pybind11/2.11.1 \
            --settings compiler=gcc \
            --settings compiler.version=14 \
            --settings compiler.libcxx=libstdc++11 \
            --settings arch=x86

          echo "CMAKE_TOOLCHAIN_FILE=$CONAN_ROOT/conan_toolchain.cmake" >> $GITHUB_ENV

          export pybind11_DIR=$(cygpath -u "$($PYTHON_EXECUTABLE -c 'import pybind11; print(pybind11.get_cmake_dir())')")
          echo "pybind11_DIR=$pybind11_DIR" >> $GITHUB_ENV

      - name: Configure
        run: |
          set -x
          
          which cmake
          export CMAKE_BIN="cmake.exe"
          echo "CMAKE_BIN=$CMAKE_BIN" >> $GITHUB_ENV

          $CMAKE_BIN -B _build -S . \
            -DCMAKE_INSTALL_PREFIX=_install \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=17 \
            -DBUILD_SHARED_LIBS=ON \
            -DPYBIND11=ON \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DPYTHON_INSTALL_DIR="$PYTHON_INSTALL_DIR" \
            -Dpybind11_DIR=$pybind11_DIR \
            -DCMAKE_TOOLCHAIN_FILE=$CMAKE_TOOLCHAIN_FILE \
            -DCMAKE_POLICY_DEFAULT_CMP0091=NEW

      - name: Build
        run: |
          set -x
          $CMAKE_BIN --build _build --target install --config Release

      - name: Test Pybind11
        run: |
          set -x
          export PATH=$PYTHON_DIR:$PATH
          export PYTHONPATH=$PYTHON_INSTALL_DIR
          $PYTHON_EXECUTABLE src/pybind11/PyBindImathTest/test_import_pybindimath.py
          
      - name: Test
        run: |
          set -x
          export PATH=$PYTHON_DIR:$PATH
          export PYTHONPATH=$GITHUB_WORKSPACE/_install/python
          $CMAKE_BIN --build . --target test --config Release
        working-directory: _build
          