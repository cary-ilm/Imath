name: Build with MinGW32

on:
  push:
    paths:
      - '**'
      - '!**.md'
      - '!connanfile.txt'
      - '!.github/workflows/**'
      - '.github/workflows/ci_mingw.yml'
  pull_request:
    paths:
      - '**'
      - '!**.md'
      - '!connanfile.txt'
      - '!.github/workflows/**'
      - '.github/workflows/ci_mingw.yml'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: actions/checkout@v3
      
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: >-
            mingw-w64-i686-gcc
            mingw-w64-i686-cmake
            mingw-w64-i686-ninja
            mingw-w64-i686-python
            mingw-w64-i686-python-pip
            mingw-w64-i686-boost
      
      - name: Install Conan
        run: |
          pip install conan
          
      - name: Configure Python paths
        run: |
          PYTHON_ROOT=/mingw32
          PYTHON_VERSION=$(python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
          echo "PYTHON_INCLUDE=$PYTHON_ROOT/include/python$PYTHON_VERSION" >> $GITHUB_ENV
          echo "PYTHON_LIB=$PYTHON_ROOT/lib/libpython$PYTHON_VERSION.dll.a" >> $GITHUB_ENV
          echo "PYTHON_EXECUTABLE=$PYTHON_ROOT/bin/python.exe" >> $GITHUB_ENV
          
      - name: Install dependencies with Conan
        run: |
          mkdir -p /c/Users/runneradmin/.conan2/profiles/
          cp .conan2/profiles/default /c/Users/runneradmin/.conan2/profiles/default
          ls -l /c/Users/runneradmin/.conan2/profiles/
          cat /c/Users/runneradmin/.conan2/profiles/default

          mkdir _build && cd _build
          # Use your existing default profile
          conan install .. \
            --build=missing \
            -o boost/*:with_python=True \
            -o boost/*:python_executable=${{ env.PYTHON_EXECUTABLE }}
            
      - name: Build project
        run: |
          cd _build
          cmake .. \
            -DPYTHON=ON \
            -DPYBIND11=ON \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DPython3_EXECUTABLE=${{ env.PYTHON_EXECUTABLE }} \
            -DPython3_INCLUDE_DIR=${{ env.PYTHON_INCLUDE }} \
            -DPython3_LIBRARY=${{ env.PYTHON_LIB }}
            
          cmake --build .